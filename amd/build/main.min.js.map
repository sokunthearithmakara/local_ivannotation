{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["/* eslint-disable complexity */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main script for the annotation plugin\n *\n * @module     local_ivannotation/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport ModalForm from 'core_form/modalform';\nimport {notifyFilterContentUpdated as notifyFilter} from 'core_filters/events';\nimport Notification from 'core/notification';\n\nexport default class Annotation extends Base {\n    /**\n     * Round a number to two decimal places\n     * @param {Number} num Number\n     * @returns {Number} rounded number\n     */\n    roundToTwo(num) {\n        return +(Math.round(num + 'e+2') + 'e-2');\n    }\n\n    /**\n     * Initialize the annotation type\n     * @returns {void}\n     */\n    async init() {\n        const videoWrapper = $('#video-wrapper');\n        let item = this.annotations.find((annotation) => annotation.type == 'annotation');\n        if (!this.isEditMode()) {\n            if (!item || item.content == '') {\n                return;\n            }\n            const updateAspectRatio = async(video, reset) => {\n                let elem = video ? $('#player') : $(`#annotation-canvas[data-id='${item.id}']`);\n                if ($(\"#wrapper\").hasClass('fullscreen')) {\n                    let ratio = 16 / 9; // #player aspect ratio.\n                    if (!this.displayoptions.usefixedratio || this.displayoptions.usefixedratio == 0) {\n                        ratio = this.player.aspectratio;\n                    }\n                    let videowrapperaspect = videoWrapper.width() / videoWrapper.height();\n                    const videowrapperwidth = videoWrapper.width();\n                    const videowrapperheight = videoWrapper.height();\n                    // Screen is wider than the video.\n                    if (videowrapperaspect > ratio) {\n                        let height = videowrapperheight;\n                        let width = height * ratio;\n                        elem.css('height', height + 'px');\n                        elem.css('width', width + 'px');\n                        elem.css('top', '0');\n                        elem.css('left', (videowrapperwidth - width) / 2 + 'px');\n                    } else if (videowrapperaspect < ratio) {\n                        let width = videowrapperwidth;\n                        let height = width / ratio;\n                        elem.css('width', width + 'px');\n                        elem.css('height', height + 'px');\n                        elem.css('top', ((videowrapperheight - height) / 2) + 'px');\n                        elem.css('left', '0');\n                    }\n                } else {\n                    elem.css('width', '100%');\n                    elem.css('height', '100%');\n                    elem.css('top', '0');\n                    elem.css('left', '0');\n                }\n                if (reset) {\n                    elem.css('width', '100%');\n                    elem.css('height', '100%');\n                    elem.css('top', '0');\n                    elem.css('left', '0');\n                }\n            };\n\n            updateAspectRatio();\n            updateAspectRatio(true);\n\n            let vwrapper = document.querySelector('#video-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                updateAspectRatio();\n                updateAspectRatio(true);\n            });\n\n            resizeObserver.observe(vwrapper);\n\n            $(document).on('timeupdate', function(e) {\n                updateAspectRatio(true, true);\n                const t = e.originalEvent.detail.time;\n                let annos = $('#annotation-canvas .annotation-wrapper');\n                annos.each(function() {\n                    let start = Number($(this).data('start'));\n                    let end = Number($(this).data('end'));\n                    if (t >= start && t <= end) {\n                        $(this).css('visibility', 'visible');\n                    } else {\n                        $(this).css('visibility', 'hidden');\n                    }\n                });\n            });\n\n            $('#annotation-canvas').attr('data-id', item.id);\n            let content = await this.render(item, 'json');\n            this.postContentRender(item, content);\n        } else {\n            $(document).on('timeupdate', function(e) {\n                const t = e.originalEvent.detail.time;\n                let annos = $('#annotation-canvas .annotation-wrapper');\n                annos.each(function() {\n                    let start = Number($(this).data('start'));\n                    let end = Number($(this).data('end'));\n                    if (t >= start && t <= end) {\n                        $(this).css('visibility', 'visible');\n                    } else {\n                        $(this).css('visibility', 'hidden');\n                    }\n                });\n            });\n            if (item) {\n                $('#annotation-canvas').attr('data-id', item.id);\n                item.editmode = true;\n                let content = await this.render(item, 'json');\n                this.postContentRender(item, content);\n            }\n        }\n    }\n\n    /**\n     * Render the annotation toolbar\n     * @param {Object} annotation annotation object\n     * @returns {void}\n     */\n    async renderAnnotationToolbar(annotation) {\n        $('#annotation-btns').remove();\n        let annotationitems = [\n            {\n                'icon': 'bi bi-image',\n                'type': 'media',\n                'mediatype': 'image',\n                'label': M.util.get_string('image', 'local_ivannotation'),\n            },\n            {\n                'icon': 'bi bi-alphabet-uppercase',\n                'type': 'textblock',\n                'mediatype': 'textblock',\n                'label': M.util.get_string('text', 'local_ivannotation'),\n            },\n            {\n                'icon': 'bi bi-circle-square',\n                'type': 'shape',\n                'mediatype': 'shape',\n                'label': M.util.get_string('shape', 'local_ivannotation'),\n            },\n            {\n                'icon': 'bi bi-file-earmark-arrow-down',\n                'type': 'media',\n                'mediatype': 'file',\n                'label': M.util.get_string('inlinefile', 'local_ivannotation'),\n            },\n            {\n                'icon': 'bi bi-sign-turn-right',\n                'type': 'navigation',\n                'mediatype': 'navigation',\n                'label': M.util.get_string('navigation', 'local_ivannotation')\n            },\n            {\n                'icon': 'bi bi-plus-circle',\n                'type': 'hotspot',\n                'mediatype': 'hotspot',\n                'label': M.util.get_string('hotspot', 'local_ivannotation'),\n            }\n        ];\n        const dataForTemplate = {\n            id: annotation.id,\n            items: annotationitems,\n        };\n\n        let html = await Templates.render('local_ivannotation/toolbar', dataForTemplate);\n        $(\"#wrapper\").append(html);\n\n        this.enableColorPicker();\n    }\n\n    /**\n     * Callback after the content is retrieved\n     * @param {Object} annotation annotation object\n     * @param {Object} data data processed through the main php file\n     */\n    postContentRender(annotation, data) {\n        let self = this;\n        let $videoWrapper = $('#annotation-canvas');\n\n        // Put a background so that when an annotation is selected, user is prevented from clicking on the video.\n        if (self.isEditMode()) {\n            $videoWrapper.append(`<div id=\"background\" class=\"position-absolute w-100 h-100 bg-transparent d-none\"></div>`);\n        }\n        let $playerWrapper = $('#wrapper');\n        let draftStatus = null;\n\n        /**\n         * Format seconds to HH:MM:SS\n         * @param {Number} seconds seconds\n         * @param {Boolean} rounded if the seconds should be rounded\n         * @returns formatted time\n         */\n        const convertSecondsToMMSS = (seconds, rounded = false) => {\n            let hours = Math.floor(seconds / 3600);\n            let minutes = Math.floor((seconds - hours * 3600) / 60);\n            let sec = seconds - hours * 3600 - minutes * 60;\n            let formattedTime = '';\n            if (hours > 0) {\n                formattedTime += hours + ':';\n            }\n            if (minutes < 10) {\n                formattedTime += '0';\n            }\n            formattedTime += minutes + ':';\n            if (sec < 10) {\n                formattedTime += '0';\n            }\n            if (rounded) {\n                formattedTime += Math.round(sec);\n            } else {\n                formattedTime += self.roundToTwo(sec);\n            }\n            return formattedTime;\n        };\n\n        /**\n         * Update position information of the active element on the toolbar.\n         * @param {Object} elem jQuery element\n         */\n        const updatePositionInfo = (elem) => {\n            let w = elem.outerWidth();\n            let hw = elem.outerHeight();\n            let t = elem.position().top < 0 ? 0 : elem.position().top;\n            let l = elem.position().left < 0 ? 0 : elem.position().left;\n            let z = elem.css('z-index');\n            let s = elem.data('start');\n            let e = elem.data('end');\n            $(`#annotation-btns #position #x-position`).text(Math.round(l));\n            $(`#annotation-btns #position #y-position`).text(Math.round(t));\n            $(`#annotation-btns #position #z-position`).text(z - 5);\n            $(`#annotation-btns #position #w-position`).text(Math.round(w));\n            $(`#annotation-btns #position #h-position`).text(Math.round(hw));\n            $(`#annotation-btns #position #s-position`).text(convertSecondsToMMSS(s));\n            $(`#annotation-btns #position #e-position`).text(convertSecondsToMMSS(e));\n        };\n\n        /**\n         * Recalculate the size of the element.\n         * @param {Object} elem jQuery element\n         * @return {Object} position of the element\n         */\n        const recalculatingSize = (elem) => {\n            let message = $('#annotation-canvas');\n            let w = elem.outerWidth() / message.width() * 100;\n            let h = elem.outerHeight() / message.height() * 100;\n            let t = elem.position().top / message.height() * 100;\n            t = t < 0 ? 0 : t;\n            let l = elem.position().left / message.width() * 100;\n            l = l < 0 ? 0 : l;\n            let z = elem.css('z-index');\n            let g = elem.data('group');\n            let position = {\n                'width': w + '%',\n                'height': h + '%',\n                'left': l + '%',\n                'top': t + '%',\n                'z-index': z,\n            };\n            position.group = g;\n            elem.css(position);\n            updatePositionInfo(elem);\n            return position;\n        };\n\n        /**\n         * Calculate the text size for text and file type.\n         * @param {Object} elem jQuery element\n         * @param {Boolean} button if it is a button\n         * @param {Boolean} multiline if it is a multiline text\n         */\n        const recalculatingTextSize = (elem, button, multiline = false) => {\n            let fontSize = elem.outerHeight();\n            let padding = 0;\n            let rowCount = 1;\n            if (multiline) {\n                let rows = elem.find('.text-row');\n                rowCount = rows.length;\n                if (rowCount > 1) {\n                    let rowHeight = elem.outerHeight() / rowCount;\n                    padding = rowHeight * 0.3;\n                    fontSize = (elem.outerHeight() - padding * 2) / rowCount;\n                }\n            }\n            let style = {\n                'font-size': (button ? fontSize * 0.7 : fontSize * 0.9) + 'px',\n                'line-height': fontSize + 'px',\n                'padding-left': (button ? fontSize * 0.5 : fontSize * 0.3) + 'px',\n                'padding-right': (button ? fontSize * 0.5 : fontSize * 0.3) + 'px',\n            };\n            if (multiline && rowCount > 1) {\n                style.padding = padding + 'px';\n            }\n            elem.find('.annotation-content').css(style);\n            elem.css('width', 'auto');\n        };\n\n        /**\n         * Render timeline items.\n         * @param {Array} elements array of elements to render\n         * @param {Number} activeids array of ids of active elements\n         */\n        const renderTimelineItems = async(elements, activeids) => {\n            const currentTime = await self.player.getCurrentTime();\n            if (activeids === null) {\n                activeids = [];\n            } else {\n                activeids = activeids.map(id => parseInt(id));\n            }\n            let timeline = $('#timeline #annotation-timeline');\n            timeline.empty();\n            elements.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            let count = 0;\n            elements.forEach((item, i) => {\n                let prop = item.properties;\n                let type = item.type;\n                let id = parseInt(item.id);\n                let left = (prop.start - self.start) / (self.end - self.start) * 100;\n                let width = (prop.end - prop.start) / (self.end - self.start) * 100;\n                timeline.append(`<div class=\"annotation-timeline-item position-absolute ${activeids.includes(id) ? 'active' : ''}\"\n                     data-item=\"${id}\" data-type=\"${type}\" data-end=\"${prop.end}\" data-start=\"${prop.start}\"\n                         style=\"z-index: 5; left: ${left}%; top: ${(i + 1) * 10}px; width: ${width}%\"></div>`);\n                count++;\n                if (count == elements.length) {\n                    // Initialize the draggable and resizable for each item on the timeline.\n                    $('.annotation-timeline-item').draggable({\n                        'axis': 'x',\n                        'containment': '#annotation-timeline',\n                        'cursor': 'move',\n                        'grid': [1, 0],\n                        'start': function() {\n                            // Get all the selected elements.\n                            if (!$(this).hasClass('active')) {\n                                $(this).trigger('click');\n                            }\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.addClass('no-pointer-events');\n                            $selected.each(function() {\n                                $(this).data('startPosition', $(this).position());\n                            });\n                            timestampScrollbar($(this).data('start'));\n                            $('#timeline-items').addClass('no-pointer-events');\n                        },\n                        'drag': async function(e, ui) {\n                            let timestamp = (ui.position.left) / $('#annotation-timeline').width() * self.totaltime\n                                + self.start;\n                            let duration = $(this).data('end') - $(this).data('start');\n                            $('#s-position').text(convertSecondsToMMSS(timestamp));\n                            $('#e-position').text(convertSecondsToMMSS(timestamp + duration));\n\n                            // Hide or show these element\n                            let now = await self.player.getCurrentTime();\n                            let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$(this).data('item')}\"]`);\n                            if (timestamp <= now && timestamp + duration >= now) {\n                                $annowrapper.css('visibility', 'visible');\n                            } else {\n                                $annowrapper.css('visibility', 'hidden');\n                            }\n                            let left = (timestamp - self.start) / self.totaltime * 100;\n                            $('#cursorbar').css('left', `calc(${left}% + 5px)`);\n                            $('#position-marker').css('left', `${left}%`);\n                            $('#vseek #bar #position').text(convertSecondsToMMSS(timestamp));\n\n                            let $selected = $('.annotation-timeline-item.active');\n                            const distance = ui.originalPosition.left - ui.position.left;\n                            $selected.not(this).each(function() {\n                                let $this = $(this);\n                                const position = $this.data('startPosition');\n                                $this.css({\n                                    left: ((position.left - distance) / $('#annotation-timeline').width()) * 100 + '%',\n                                });\n                                let timestamp = ($this.position().left / $('#annotation-timeline').width()) * self.totaltime\n                                    + self.start;\n                                let duration = $this.data('end') - $this.data('start');\n                                let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$this.data('item')}\"]`);\n                                if (timestamp <= now && timestamp + duration >= now) {\n                                    $annowrapper.css('visibility', 'visible');\n                                } else {\n                                    $annowrapper.css('visibility', 'hidden');\n                                }\n                            });\n                        },\n                        'stop': function() {\n                            setTimeout(function() {\n                                $('#cursorbar, #position-marker').remove();\n                                $('#timeline-items').removeClass('no-pointer-events');\n                                $(this).removeClass('no-pointer-events');\n                            }, 200);\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.each(function() {\n                                let $this = $(this);\n                                let elementid = $this.data('item');\n                                let itemIndex = items.findIndex(x => x.id == elementid);\n                                let item = items[itemIndex];\n                                let elem = $videoWrapper.find(`.annotation-wrapper[data-item=\"${elementid}\"]`);\n                                let prop = item.properties;\n                                let duration = prop.end - prop.start;\n                                prop.start = (($this.position().left) / $('#annotation-timeline').width() * self.totaltime)\n                                    + self.start;\n                                prop.start = self.roundToTwo(prop.start);\n                                prop.end = prop.start + duration;\n                                elem.attr('data-start', prop.start);\n                                elem.attr('data-end', prop.end);\n                                $this.attr('data-start', prop.start);\n                                $this.attr('data-end', prop.end);\n                                item.properties = prop;\n                                items[itemIndex] = item;\n                            });\n                            $selected = $selected.map(function() {\n                                return $(this).data('item');\n                            }).get();\n                            saveTracking($selected);\n                            renderItems(items, $selected, false);\n                        },\n                    });\n\n                    $('.annotation-timeline-item').resizable({\n                        'handles': 'e, w',\n                        'containment': 'parent',\n                        'grid': [1, 0],\n                        'start': async function() {\n                            // Get all the selected elements\n                            if (!$(this).hasClass('active')) {\n                                $(this).trigger('click');\n                            }\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.addClass('no-pointer-events');\n                            $selected.each(function() {\n                                $(this).data('originalStart', $(this).data('start'));\n                                $(this).data('originalEnd', $(this).data('end'));\n                            });\n                            timestampScrollbar($(this).data('start'));\n                            $('#timeline-items').addClass('no-pointer-events');\n                        },\n                        'resize': async function(e, ui) {\n                            let timestamp = 0;\n                            if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                                if (ui.position.left < 0) {\n                                    ui.position.left = 0;\n                                }\n                                timestamp = ((ui.position.left)\n                                    / $('#annotation-timeline').width()) * self.totaltime + self.start;\n                            } else {\n                                timestamp = ((ui.position.left + ui.size.width)\n                                    / $('#annotation-timeline').width()) * self.totaltime + self.start;\n                            }\n\n                            let left = (timestamp - self.start) / self.totaltime * 100;\n                            $('#cursorbar').css('left', `calc(${left}% + 5px)`);\n                            $('#position-marker').css('left', `${left}%`);\n                            $('#vseek #bar #position').text(convertSecondsToMMSS(timestamp));\n\n                            const newStart = ((ui.position.left) / $('#annotation-timeline').width()) * self.totaltime\n                                + self.start;\n                            const newEnd = ((ui.position.left + ui.size.width) / $('#annotation-timeline').width())\n                                * self.totaltime + self.start;\n                            $('#s-position').text(convertSecondsToMMSS(newStart));\n                            $('#e-position').text(convertSecondsToMMSS(newEnd));\n\n                            // Hide or show this element\n                            let now = await self.player.getCurrentTime();\n                            let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$(this).data('item')}\"]`);\n                            if (newStart <= now && newEnd >= now) {\n                                $annowrapper.css('visibility', 'visible');\n                            } else {\n                                $annowrapper.css('visibility', 'hidden');\n                            }\n\n                            // Handle other selected elements: same position and width\n                            let leftPercentage = ui.position.left / $('#annotation-timeline').width() * 100;\n                            let newWidth = ui.size.width / $('#annotation-timeline').width() * 100;\n                            let $selected = $('.annotation-timeline-item.active').not(this);\n                            $selected.each(function() {\n                                let $this = $(this);\n                                $this.css({\n                                    'left': leftPercentage + '%',\n                                    'width': newWidth + '%'\n                                });\n\n                                $this.attr('data-start', newStart);\n                                $this.attr('data-end', newEnd);\n                                let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$this.data('item')}\"]`);\n                                if (newStart <= now && newEnd >= now) {\n                                    $annowrapper.css('visibility', 'visible');\n                                } else {\n                                    $annowrapper.css('visibility', 'hidden');\n                                }\n                            });\n                        },\n                        'stop': async function(e, ui) {\n                            setTimeout(function() {\n                                $('#cursorbar, #position-marker').remove();\n                                $('#timeline-items').removeClass('no-pointer-events');\n                            }, 200);\n                            const newStart = ((ui.position.left) / $('#annotation-timeline').width()) * self.totaltime\n                                + self.start;\n                            const newEnd = ((ui.position.left + ui.size.width) / $('#annotation-timeline').width())\n                                * self.totaltime + self.start;\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.each(function() {\n                                let $this = $(this);\n                                let elementid = $this.data('item');\n                                let itemIndex = items.findIndex(x => x.id == elementid);\n                                let item = items[itemIndex];\n                                let elem = $videoWrapper.find(`.annotation-wrapper[data-item=\"${elementid}\"]`);\n                                let prop = item.properties;\n                                prop.start = self.roundToTwo(newStart);\n                                prop.end = self.roundToTwo(newEnd);\n                                elem.attr('data-start', prop.start);\n                                elem.attr('data-end', prop.end);\n                                $this.attr('data-start', prop.start);\n                                $this.attr('data-end', prop.end);\n                                item.properties = prop;\n                                items[itemIndex] = item;\n                            });\n                            $selected = $selected.map(function() {\n                                return $(this).data('item');\n                            }).get();\n                            saveTracking($selected);\n                            renderItems(items, $selected, false);\n                        }\n                    });\n\n                    self.dispatchEvent('timeupdate', {time: currentTime});\n                    return true;\n                }\n            });\n        };\n\n        /**\n         * Append timestamp to the scrollbar.\n         * @param {Number} seconds\n         * @returns void\n         */\n        const timestampScrollbar = (seconds) => {\n            const formattedTime = convertSecondsToMMSS(seconds);\n            let $scrollbar = $('#scrollbar').clone();\n            $scrollbar.attr('id', 'cursorbar');\n            $scrollbar.find('#scrollhead').remove();\n            $('#timeline-items').append($scrollbar);\n            $('#vseek #bar').append(`<div id=\"position-marker\" class=\"border-0\">\n                <div id=\"position\" class=\"py-0 px-1\" style=\"top:-10px;\">\n                ${formattedTime}</div></div>`);\n        };\n\n        const renderImage = (wrapper, item, prop, id, position) => {\n            const parts = prop.timestamp.split(':');\n            const timestamp = parts.length > 1 ? Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]) : -1;\n            if (prop.gotourl != '') {\n                wrapper.append(`<a href=\"${prop.gotourl}\" target=\"_blank\"><img src=\"${prop.url}\" id=\"${id}\"\n                         class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\"\n                         ${prop.rounded == 1 ? 'style=\"border-radius:1em;\"' : ''} alt=\"${prop.formattedalttext}\"/></a>`);\n            } else {\n                wrapper.append(`<img src=\"${prop.url}\" id=\"${id}\"\n                              class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\n                              ${timestamp > 0 ? 'cursor-pointer' : ''}\"\n                               ${prop.rounded == 1 ? 'style=\"border-radius:1em;\"' : ''} alt=\"${prop.formattedalttext}\"/>`);\n            }\n            if (!self.isEditMode()) {\n                if (prop.gotourl == '' && timestamp < 0) {\n                    wrapper.removeClass('resizable');\n                    wrapper.addClass('no-pointer');\n                } else {\n                    wrapper.addClass('clickable');\n                }\n                if (timestamp >= 0) {\n                    wrapper.attr('data-timestamp', timestamp);\n                }\n            }\n            wrapper.css(position);\n            wrapper.css('height', 'auto');\n            $videoWrapper.append(wrapper);\n        };\n\n        const renderFile = (wrapper, item, prop, id, position) => {\n            let wrapperhtml = `<a id=\"${id}\"\n                    class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'iv-rounded-0'}\n                    annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''} rotatey-180\" href=\"${prop.url}\"\n                     target=\"_blank\"><i class=\"bi bi-paperclip fs-unset\"></i>${prop.formattedlabel != \"\" ?\n                    `<span style=\"margin-left:0.25em;\">${prop.formattedlabel}` : ''}</a>`;\n            wrapper.append(`<div class=\"d-flex h-100\">${wrapperhtml}</div>`);\n            position.width = 0;\n            wrapper.css(position);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper, true);\n        };\n\n        const renderNavigation = (wrapper, item, prop, id, position) => {\n            const parts = prop.timestamp.split(':');\n            const timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n            wrapper.append(`<div class=\"d-flex h-100\"><span id=\"${id}\" tabindex=\"0\"\n                         class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'iv-rounded-0'}\n                          annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''}\">\n                          ${prop.formattedlabel}</span></div>`);\n            position.width = 0;\n            wrapper.css(position);\n            $videoWrapper.append(wrapper);\n            if (!self.isEditMode()) {\n                wrapper.attr('data-timestamp', timestamp);\n            }\n            recalculatingTextSize(wrapper, true);\n        };\n\n        // Deprecated\n        const renderText = (wrapper, item, prop, id, position) => {\n            if (prop.url != undefined && prop.url != '') {\n                wrapper.append(`<a id=\"${id}\"\n                     class=\"annotation-content text-nowrap ${prop.shadow == '1' ? 'text-shadow' : ''} d-block\"\n                      href=\"${prop.url}\" target=\"_blank\">${prop.formattedlabel}</a>`);\n            } else {\n                if (!self.isEditMode() || !$('#content-region').hasClass('no-pointer-events')) {\n                    wrapper.addClass('no-pointer');\n                }\n                wrapper.append(`<div id=\"${id}\"\n                     class=\"annotation-content text-nowrap ${prop.shadow == '1' ? 'text-shadow' : ''}\n                     \">${prop.formattedlabel}</div>`);\n            }\n            wrapper.position.width = 0;\n            wrapper.css(position);\n            const style = {\n                'font-weight': prop.bold == '1' ? 'bold' : 'normal',\n                'font-style': prop.italic == '1' ? 'italic' : 'normal',\n                'text-decoration': prop.underline == '1' ? 'underline' : 'none',\n                'color': prop.textcolor,\n                'background': prop.bgcolor,\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n                'font-family': prop.textfont != '' ? prop.textfont : 'inherit',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper);\n        };\n\n        const renderTextBlock = (wrapper, item, prop, id, position) => {\n            let textparts = prop.formattedlabel.split('\\r\\n');\n            let textblock = '<div class=\"d-flex flex-column\">';\n            const timestamp = prop.timestamp.split(':');\n            const time = timestamp.length > 1 ? Number(timestamp[0]) * 3600 + Number(timestamp[1]) * 60 + Number(timestamp[2])\n                : -1;\n            textparts.forEach((part) => {\n                if (part.trim() == '') {\n                    return;\n                }\n                textblock += `<span class=\"text-row text-nowrap iv-text-${prop.alignment}\"\n                         style='font-family: ${prop.textfont != '' ? prop.textfont : 'inherit'}'>\n                         ${part}</span>`;\n            });\n            textblock += '</div>';\n            if (prop.url != undefined && prop.url != '') {\n                wrapper.append(`<a id=\"${id}\"\n                             class=\"annotation-content d-block ${prop.shadow == '1' ? 'text-shadow' : ''}\"\n                              href=\"${prop.url}\" target=\"_blank\">${textblock}</a>`);\n                wrapper.addClass('clickable');\n            } else {\n                if (!self.isEditMode() || !$('#content-region').hasClass('no-pointer-events')) {\n                    if (time >= 0) {\n                        wrapper.addClass('cursor-pointer');\n                    } else {\n                        wrapper.addClass('no-pointer');\n                    }\n                }\n                wrapper.append(`<div id=\"${id}\"\n                             class=\"annotation-content ${prop.shadow == '1' ? 'text-shadow' : ''}\">${textblock}</div>`);\n\n                if (time >= 0) {\n                    wrapper.attr('data-timestamp', time);\n                }\n            }\n            wrapper.position.width = 0;\n            wrapper.css(position);\n            const style = {\n                'font-size': item.position.fontSize,\n                'line-height': item.position.lineHeight,\n                'font-weight': prop.bold == '1' ? 'bold' : 'normal',\n                'font-style': prop.italic == '1' ? 'italic' : 'normal',\n                'text-decoration': prop.underline == '1' ? 'underline' : 'none',\n                'color': prop.textcolor,\n                'background': prop.bgcolor,\n                'border-radius': prop.rounded == '1' ? '0.3em' : '0',\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper, false, true);\n        };\n\n        const renderShape = (wrapper, item, prop, id, position) => {\n            const parts = prop.timestamp.split(':');\n            const timestamp = parts.length > 1 ? Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]) : -1;\n            if (prop.gotourl != '') {\n                wrapper.append(`<a href=\"${prop.gotourl}\" target=\"_blank\"><div id=\"${id}\"\n                         class=\"annotation-content ${prop.shadow == '1' ? 'shadow' : ''}\"\n                          style=\"width: 100%; height: 100%;\"></div></a>`);\n                wrapper.addClass('clickable');\n            } else {\n                if (!self.isEditMode()) {\n                    if (timestamp < 0) {\n                        wrapper.addClass('no-pointer');\n                    } else {\n                        wrapper.addClass('clickable');\n                    }\n                }\n                wrapper.append(`<div id=\"${id}\" class=\"annotation-content ${prop.shadow == '1' ? 'shadow' : ''}\"\n                         style=\"width: 100%; height: 100%;\"></div>`);\n                if (timestamp >= 0) {\n                    wrapper.attr('data-timestamp', timestamp);\n                }\n            }\n            wrapper.css(position);\n            const style = {\n                'background': prop.bgcolor,\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n                'opacity': prop.opacity / 100,\n            };\n            if (prop.shape == 'circle') {\n                style['border-radius'] = '50%';\n            } else if (prop.shape == 'rectangle') {\n                style['border-radius'] = prop.rounded == '1' ? '1em' : '0';\n            }\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n        };\n\n        const renderHotspot = (wrapper, item, prop, id, position) => {\n            wrapper.append(`<div id=\"${id}\" class=\"annotation-content shadow-sm pulse\" role=\"button\"\n                title=\"${prop.formattedtitle}\"></div>`);\n            position['aspect-ratio'] = '1';\n            wrapper.css(position);\n            const style = {\n                'background-color': prop.color,\n                'opacity': prop.opacity / 100,\n                'border-radius': '50%',\n                'aspect-ratio': '1',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n\n            if (!self.isEditMode()) {\n                if (prop.usemodal == '1') {\n                    if (self.isBS5) {\n                        wrapper.attr({\n                            'data-bs-toggle': 'modal',\n                        });\n                    } else {\n                        wrapper.attr({\n                            'data-toggle': 'modal',\n                        });\n                    }\n                } else {\n                    let attr = {\n                        'tabindex': -1,\n                    };\n                    if (self.isBS5) {\n                        attr['data-bs-trigger'] = 'manual';\n                        attr['data-bs-boundary'] = 'viewport';\n                        attr['data-bs-placement'] = 'auto';\n                        attr['data-bs-html'] = 'true';\n                        attr['data-bs-content'] = '<div class=\"loader\"></div>';\n                        attr['data-bs-title'] = prop.formattedtitle\n                            + `<i class=\"bi bi-x-circle-fill iv-ml-auto popover-dismiss cursor-pointer\"\n                                     style=\"font-size:1.5em;\"></i>`;\n                    } else {\n                        attr['data-trigger'] = 'manual';\n                        attr['data-boundary'] = 'viewport';\n                        attr['data-placement'] = 'auto';\n                        attr['data-html'] = 'true';\n                        attr['data-content'] = '<div class=\"loader\"></div>';\n                        attr['data-title'] = prop.formattedtitle\n                            + `<i class=\"bi bi-x-circle-fill iv-ml-auto popover-dismiss cursor-pointer\"\n                                     style=\"font-size:1.5em;\"></i>`;\n                    }\n\n                    wrapper.attr(attr);\n\n                    wrapper.popover({\n                        container: '#wrapper',\n                        html: true,\n                        template: `<div class=\"popover inlineannotation-popover id-${id}\"\n                                 role=\"tooltip\"><div class=\"arrow\"></div>\n                                 <h3 class=\"popover-header d-flex justify-content-between\"></h3>\n                                 <div class=\"popover-body rounded\"></div>${prop.url != '' ?\n                                `<div class=\"popup-footer bg-light p-2 rounded-bottom\"><a href=\"${prop.url}\"\n                                      class=\"d-block w-100 iv-text-right rotatex-360\" target=\"_blank\">\n                                      <i class=\"bi bi-arrow-right\"><i></i></i></a></div>` : ''}</div>`,\n                    });\n\n                    wrapper.on('shown.bs.popover', async function() {\n                        let $body = $(`.popover.id-${id} .popover-body`);\n                        const html = await self.formatContent(prop.content.text, annotation.contextid);\n                        $body.html(html);\n                        notifyFilter($body);\n                        wrapper.popover('update');\n                    });\n                    if (prop.openbydefault == '1') {\n                        wrapper.popover('show');\n                    }\n                }\n            }\n        };\n\n        /**\n         * Render items on the annotation canvas.\n         * @param {Array} elements array of elements to render\n         * @param {Array} actives ids of active element\n         * @param {Boolean} update first render or updating items\n         */\n        const renderItems = async(elements, actives, update) => {\n            const currentTime = await self.player.getCurrentTime();\n            if (!update) { // Clear the annotation-canvas if it is a new start.\n                $videoWrapper.find(`.annotation-wrapper`).remove();\n                $('#timeline #annotation-timeline').empty();\n            }\n\n            if (elements.length == 0) {\n                if (actives) {\n                    actives.forEach((active) => {\n                        $videoWrapper.find(`.annotation-wrapper[data-item=\"${active}\"]`).addClass('active');\n                        setTimeout(function() {\n                            $('#timeline #annotation-timeline').find(`.annotation-timeline-item[data-item=\"${active}\"]`)\n                                .addClass('active');\n                        }, 200);\n                    });\n                }\n            } else {\n                // Sort element by z-index.\n                elements.sort((a, b) => Number(b.position['z-index']) - Number(a.position['z-index']));\n                elements = elements.filter(item => item.properties.start <= self.end && item.properties.end >= self.start);\n                elements.map(item => {\n                    let start = item.properties.start;\n                    let end = item.properties.end;\n                    if (start < self.start) {\n                        start = self.start;\n                    }\n                    if (end > self.end) {\n                        end = self.end;\n                    }\n\n                    item.properties.start = start;\n                    item.properties.end = end;\n\n                    return item;\n                });\n\n                let count = 0;\n                elements.forEach(async(item) => {\n                    let prop = item.properties;\n                    let type = item.type;\n                    let id = item.id;\n                    let position = item.position;\n                    let wrapper = $(`<div class=\"annotation-wrapper\" data-group=\"${position.group}\" data-start=\"${prop.start}\"\n                     data-end=\"${prop.end}\"  data-anno=\"${annotation.id}\" data-item=\"${id}\" data-type=\"${type}\"></div>`);\n                    if (prop.resizable == '1' || self.isEditMode()) {\n                        wrapper.addClass('resizable');\n                        wrapper.attr('tabindex', 0);\n                    }\n                    // Correct the position in player mode.\n                    if (!self.isEditMode()) {\n                        const left = position.left.replace('%', '');\n                        const top = position.top.replace('%', '');\n                        const width = position.width.replace('%', '');\n                        const height = position.height ? position.height.replace('%', '') : 0;\n                        if (left < 0.01) {\n                            position.left = '0%';\n                        }\n                        if (top < 0.01) {\n                            position.top = '0%';\n                        }\n                        if (width > 99.5) {\n                            position.width = '100%';\n                        }\n                        if (height > 99.5) {\n                            position.height = '100%';\n                        }\n                    }\n                    switch (type) {\n                        case 'image':\n                            renderImage(wrapper, item, prop, id, position);\n                            break;\n                        case 'file':\n                            renderFile(wrapper, item, prop, id, position);\n                            break;\n                        case 'navigation':\n                            renderNavigation(wrapper, item, prop, id, position);\n                            break;\n                        case 'text':\n                            renderText(wrapper, item, prop, id, position);\n                            break;\n                        case 'textblock':\n                            renderTextBlock(wrapper, item, prop, id, position);\n                            break;\n                        case 'shape':\n                            renderShape(wrapper, item, prop, id, position);\n                            break;\n                        case 'hotspot':\n                            renderHotspot(wrapper, item, prop, id, position);\n                            break;\n                    }\n\n                    if (type != 'shape') {\n                        wrapper.on('mouseover', function() {\n                            if (!$(this).hasClass('resizable')) {\n                                return;\n                            }\n\n                            let aspectRatio =\n                                $(this).find('.annotation-content').width() / $(this).find('.annotation-content').height();\n                            if (wrapper.width() / wrapper.height() != aspectRatio && (type == 'image')) {\n                                $(this).height((wrapper.width() / aspectRatio));\n                            }\n                            try {\n                                $(this).resizable('option', 'aspectRatio', $(this).find('.annotation-content').outerWidth() /\n                                    $(this).find('.annotation-content').outerHeight());\n                            } catch (e) {\n                                // Do nothing.\n                            }\n                        });\n                    }\n\n                    count++;\n\n                    if (count == elements.length) {\n                        // Always trigger the timeupdate event after all items are rendered.\n                        self.dispatchEvent('timeupdate', {time: self.roundToTwo(currentTime)});\n\n                        if (self.isEditMode()) {\n                            if ($('#annotation-btns').is(\":visible\") == false) {\n                                $videoWrapper.find('.annotation-wrapper').addClass('no-pointer');\n                            }\n                            // Initialize the draggable and resizable for each item.\n                            $videoWrapper.find('.annotation-wrapper').draggable({\n                                containment: \"#annotation-canvas\",\n                                cursor: \"move\",\n                                grid: [1, 1],\n                                handle: '.annotation-content',\n                                start: function() {\n                                    getItems(false);\n                                    // Get all the selected elements\n                                    if (!$(this).hasClass('active')) {\n                                        $(this).trigger('click');\n                                    }\n                                    let $selected = $videoWrapper.find('.annotation-wrapper.active');\n                                    $selected.addClass('no-pointer');\n                                    $selected.each(function() {\n                                        $(this).data('startPosition', $(this).position());\n                                    });\n                                },\n                                drag: function(event, ui) {\n                                    let $selected = $videoWrapper.find('.annotation-wrapper.active');\n                                    let left = ui.originalPosition.left - ui.position.left;\n                                    let top = ui.originalPosition.top - ui.position.top;\n                                    let positions = $selected.map(function() {\n                                        return {\n                                            id: $(this).data('item'),\n                                            left: $(this).position().left,\n                                            top: $(this).position().top,\n                                            bottom: $(this).position().top + $(this).height(),\n                                            right: $(this).position().left + $(this).width(),\n                                        };\n                                    }).get();\n\n                                    if (positions.find(x => x.left < 0)) {\n                                        // Sort the elements by left position to get the leftmost element\n                                        positions.sort((a, b) => a.left - b.left);\n                                        let onLeft = positions.find(x => x.left < 0);\n                                        let id = onLeft.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', 0);\n                                        let distance = target.data('startPosition').left;\n                                        ui.position.left = ui.originalPosition.left - distance;\n                                        left = ui.originalPosition.left - ui.position.left;\n                                    }\n\n                                    if (positions.find(x => x.top < 0)) {\n                                        positions.sort((a, b) => a.top - b.top);\n                                        let onTop = positions.find(x => x.top < 0);\n                                        let id = onTop.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', 0);\n                                        let distance = target.data('startPosition').top;\n                                        ui.position.top = ui.originalPosition.top - distance;\n                                        top = ui.originalPosition.top - ui.position.top;\n                                    }\n\n                                    if (positions.find(x => x.right > $('#annotation-canvas').width())) {\n                                        positions.sort((a, b) => a.right - b.right);\n                                        let onRight = positions.find(x => x.right > $('#annotation-canvas').width());\n                                        let id = onRight.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', ($('#annotation-canvas').width() - target.width() - 1) + 'px');\n                                        let distance = target.data('startPosition').left - target.position().left;\n                                        ui.position.left = ui.originalPosition.left - distance;\n                                        left = ui.originalPosition.left - ui.position.left;\n                                    }\n\n                                    if (positions.find(x => x.bottom > $('#annotation-canvas').height())) {\n                                        positions.sort((a, b) => a.bottom - b.bottom);\n                                        let onBottom = positions.find(x => x.bottom > $('#annotation-canvas').height());\n                                        let id = onBottom.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', ($('#annotation-canvas').height() - target.height() - 1) + 'px');\n                                        let distance = target.data('startPosition').top - target.position().top;\n                                        ui.position.top = ui.originalPosition.top - distance;\n                                        top = ui.originalPosition.top - ui.position.top;\n                                    }\n\n                                    $selected.not(this).each(function() {\n                                        let $this = $(this);\n                                        let position = $this.data('startPosition');\n                                        $this.css({\n                                            left: (position.left - left) + 'px',\n                                            top: (position.top - top) + 'px',\n                                        });\n                                    });\n                                    updatePositionInfo($(this));\n                                },\n                                stop: function() {\n                                    let $selected = $videoWrapper.find('.annotation-wrapper.active');\n                                    let positions = $selected.map(function() {\n                                        return {\n                                            id: $(this).data('item'),\n                                            left: $(this).position().left,\n                                            top: $(this).position().top,\n                                            bottom: $(this).position().top + $(this).height(),\n                                            right: $(this).position().left + $(this).width(),\n                                        };\n                                    }).get();\n\n                                    if (positions.find(x => x.left < 0)) {\n                                        positions.sort((a, b) => a.left - b.left);\n                                        let onLeft = positions.find(x => x.left < 0);\n                                        let id = onLeft.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', 0);\n                                        let distance = target.data('startPosition').left;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newLeft = position.left - distance;\n                                            $this.css('left', newLeft + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.top < 0)) {\n                                        positions.sort((a, b) => a.top - b.top);\n                                        let onTop = positions.find(x => x.top < 0);\n                                        let id = onTop.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', 0);\n                                        let distance = target.data('startPosition').top;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newTop = position.top - distance;\n                                            $this.css('top', newTop + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.right > $('#annotation-canvas').width())) {\n                                        positions.sort((a, b) => a.right - b.right);\n                                        let onRight = positions.find(x => x.right > $('#annotation-canvas').width());\n                                        let id = onRight.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', ($('#annotation-canvas').width() - target.width() - 1) + 'px');\n                                        let distance = target.data('startPosition').left - target.position().left;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newLeft = position.left - distance;\n                                            $this.css('left', newLeft + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.bottom > $('#annotation-canvas').height())) {\n                                        positions.sort((a, b) => a.bottom - b.bottom);\n                                        let onBottom = positions.find(x => x.bottom > $('#annotation-canvas').height());\n                                        let id = onBottom.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', ($('#annotation-canvas').height() - target.height() - 1) + 'px');\n                                        let distance = target.data('startPosition').top - target.position().top;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newTop = position.top - distance;\n                                            $this.css('top', newTop + 'px');\n                                        });\n                                    }\n\n                                    getItems(false);\n                                    $selected = $selected.map(function() {\n                                        return $(this).data('item');\n                                    }).get();\n                                    saveTracking($selected);\n                                    if ($selected.length == 1) {\n                                        $(this).trigger('click');\n                                    }\n                                    $videoWrapper.find('.annotation-wrapper').removeClass('no-pointer');\n                                }\n                            });\n\n                            $videoWrapper.find('.annotation-wrapper').resizable({\n                                containment: \"#annotation-canvas\",\n                                handles: \"all\",\n                                grid: [1, 1],\n                                minHeight: 1,\n                                minWidth: 1,\n                                resize: function(event) {\n                                    let type = $(this).data('type');\n                                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                                    } else if (type == 'shape' && event.ctrlKey) {\n                                        $(this).resizable('option', 'aspectRatio', 1);\n                                    }\n                                    updatePositionInfo($(this));\n                                },\n                                stop: function() {\n                                    let type = $(this).data('type');\n                                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                                    } else if (type == 'shape') {\n                                        $(this).resizable('option', 'aspectRatio', false);\n                                    }\n                                    recalculatingSize($(this));\n                                    getItems(false);\n                                    saveTracking([$(this).data('item')]);\n                                    $(this).trigger('click');\n                                }\n                            });\n\n                            await renderTimelineItems(elements, actives);\n                            self.dispatchEvent('timeupdate', {time: self.roundToTwo(currentTime)});\n                        }\n                    }\n\n                    if (actives && actives.includes(id)) {\n                        wrapper.addClass('active');\n                        if (actives.length == 1) {\n                            setTimeout(function() {\n                                wrapper.trigger('mouseover');\n                                wrapper.trigger('click');\n                            }, 500);\n                        }\n                    }\n                });\n\n                // Handle behavior for each item\n                if (!self.isEditMode()) {\n                    $videoWrapper.off('click', `.annotation-wrapper`).on('click', `.annotation-wrapper`, async function(e) {\n                        e.stopImmediatePropagation();\n                        let wrapper = $(this);\n                        let type = wrapper.data('type');\n                        switch (type) {\n                            case 'navigation':\n                            case 'image':\n                            case 'hotspot':\n                                await self.player.pause();\n                                var hotspotid = wrapper.data('item');\n                                var hotspot = items.find(x => x.id == hotspotid);\n                                var viewertype = wrapper.data('toggle') || wrapper.data('bs-toggle');\n                                if (viewertype == 'modal') {\n                                    let title = hotspot.properties.formattedtitle;\n                                    let content = hotspot.properties.content.text;\n                                    let url = hotspot.properties.url;\n                                    let modal = `<div class=\"modal fade\" id=\"annotation-modal\" role=\"dialog\"\n                                aria-labelledby=\"annotation-modal\"\n                             aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n                             <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n                                <div class=\"modal-content iv-rounded-lg\">\n                                    <div class=\"modal-header d-flex align-items-center shadow-sm iv-iv-pr-0\" id=\"title\">\n                                        <h5 class=\"modal-title text-truncate mb-0\">${title}</h5>\n                                        <button class=\"btn mx-2 p-0 close\" aria-label=\"Close\"\n                                         data${self.isBS5 ? '-bs' : ''}-dismiss=\"modal\">\n                                            <i class=\"bi bi-x-lg fa-fw\" style=\"font-size: x-large;\"></i>\n                                        </button>\n                                    </div>\n                                    <div class=\"modal-body\" id=\"content\">\n                                    <div class=\"loader\"></div>\n                                    </div>\n                                    ${url != '' ? `<div class=\"modal-footer bg-light p-2 rounded-bottom\">\n                                        <a href=\"${url}\" class=\"d-block w-100 iv-text-right rotatex-360\" target=\"_blank\">\n                                        <i class=\"bi bi-arrow-right\"><i></i></i></a></div>` : ''}\n                                    </div>\n                                </div>\n                                </div>`;\n                                    $('#wrapper').append(modal);\n                                    $('#annotation-modal').modal('show');\n                                    $('#annotation-modal').on('hide.bs.modal', function() {\n                                        $('#annotation-modal').remove();\n                                    });\n                                    $('#annotation-modal').on('shown.bs.modal', async function() {\n                                        $('#annotation-modal .modal-body').fadeIn(300);\n                                        let $body = $('#annotation-modal .modal-body');\n                                        const html = await self.formatContent(content, annotation.contextid);\n                                        $body.html(html);\n                                        notifyFilter($body);\n                                    });\n                                } else {\n                                    wrapper.popover('show');\n                                }\n                                break;\n                        }\n\n                        if ($(this).data('timestamp') != undefined) {\n                            let timestamp = $(this).data('timestamp');\n                            self.player.seek(timestamp);\n                            self.player.play();\n                        }\n                    });\n\n                    $playerWrapper.off('click', `.popover-dismiss`).on('click', `.popover-dismiss`, function(e) {\n                        e.stopImmediatePropagation();\n                        $(this).closest('.popover').remove();\n                    });\n                }\n            }\n        };\n\n        // Check resize on video wrapper resize\n        let vwrapper = document.querySelector('#video-wrapper');\n        let resizeObserver = new ResizeObserver(() => {\n            let existingwrapper = $(`#annotation-canvas`).find(`.annotation-wrapper`);\n            if (existingwrapper.length == 0) {\n                return;\n            }\n            existingwrapper.each(function() {\n                let type = $(this).data('type');\n                setTimeout(() => {\n                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                    }\n                }, 100);\n            });\n            $('#annotation-canvas').css('font-size', $('#annotation-canvas').width() / 75 + 'px');\n        });\n        resizeObserver.observe(vwrapper);\n\n        // Ready to render items.\n\n        let items = [];\n        let tracking = [];\n        let trackingIndex = 0;\n        if (data.items != '' && data.items !== null) {\n            items = JSON.parse(data.items);\n            tracking.push({\n                items: JSON.stringify(items),\n                actives: null,\n                timestamp: self.start,\n            });\n        }\n        let draftitemid = data.draftitemid;\n\n        renderItems(items, null, false);\n\n        // End of view mode.\n        if (!self.isEditMode()) {\n            return;\n        }\n\n        /**\n         * Update tracking data for redo and undo\n         * @param {Array} actives array of active items\n         */\n        const saveTracking = (actives) => {\n            if (trackingIndex < tracking.length - 1) {\n                // Remove all the tracking data after the current index.\n                tracking = tracking.slice(0, trackingIndex + 1);\n            }\n            tracking.push({\n                items: JSON.stringify(items),\n                actives: actives,\n                timestamp: self.player.getCurrentTime(),\n                at: new Date().getTime(),\n            });\n            tracking.sort((a, b) => a.at - b.at);\n            trackingIndex = tracking.length - 1;\n            $('#annotation-btns #undo').removeAttr('disabled');\n            $('#annotation-btns #redo').attr('disabled', 'disabled');\n            if (tracking.length == 1) {\n                $('#annotation-btns #undo').attr('disabled', 'disabled');\n            }\n        };\n\n        /**\n         * Order items by layer.\n         * @param {Array} ids array of item ids\n         * @param {String} order asc or desc\n         * @returns {Array} sorted array of item ids\n         */\n        const sortItemsByLayer = (ids, order) => {\n            ids = ids.map(x => x.toString()); // Convert ids to string for consistency.\n            let targetItems = items.filter(item => {\n                const id = item.id.toString();\n                return ids.includes(id);\n            });\n            if (order == 'desc') {\n                targetItems.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            } else {\n                targetItems.sort((a, b) => a.position['z-index'] - b.position['z-index']);\n            }\n\n            return targetItems.map(item => item.id);\n        };\n\n        /**\n         * Get highest z-index.\n         * @param {Array} itms array of items\n         * @returns {Number} top z-index\n         */\n        const getTopLayer = (itms) => {\n            if (itms.length == 0) {\n                return 5;\n            }\n            let ids = itms.map(item => item.id);\n            let sorted = sortItemsByLayer(ids, 'desc');\n            let zindex = itms.find(item => item.id == sorted[0]).position['z-index'];\n            return Number(zindex);\n        };\n\n        /**\n         * Get lowest z-index.\n         * @param {Array} itms array of items\n         * @returns {Number} bottom z-index\n         */\n        const getBottomLayer = (itms) => {\n            if (itms.length == 0) {\n                return 5;\n            }\n            let ids = itms.map(item => item.id);\n            let sorted = sortItemsByLayer(ids, 'asc');\n            let zindex = itms.find(item => item.id == sorted[0]).position['z-index'];\n            return Number(zindex);\n        };\n\n        /**\n         * Get all items from the annotation-canvas.\n         * @param {Boolean} updateid whether or not to update the id of the item.\n         */\n        const getItems = (updateid) => {\n            let newItems = [];\n            const annos = $videoWrapper.find(`.annotation-wrapper`);\n            annos.each(function(index, element) {\n                const id = $(element).data('item');\n                let item = {\n                    \"type\": $(element).data('type'),\n                    \"position\": recalculatingSize($(element)),\n                };\n                item.id = id;\n                item.properties = items.find(x => x.id == id).properties;\n                if (updateid) {\n                    item.id = new Date().getTime() + index;\n                    $(element).attr('data-item', item.id);\n                }\n                newItems.push(item);\n            });\n            items = newItems;\n            draftStatus = 'draft';\n        };\n\n        /**\n         * Handle form data when adding or editing an item.\n         * @param {Object} newItem data from form submission\n         * @param {String} type type of the item\n         * @param {Boolean} add adding or editing\n         */\n        const handleFormData = (newItem, type, add) => {\n            switch (type) {\n                case 'file':\n                    if (add) {\n                        newItem.position.height = '40px';\n                        newItem.position.width = '130px';\n                    }\n                    break;\n                case 'textblock':\n                    if (add) {\n                        newItem.position.fontSize = '16px';\n                        newItem.position.lineHeight = '20px';\n                    }\n                    break;\n                case 'shape':\n                    if (add) {\n                        newItem.position.height = '100px';\n                        newItem.position.width = '100px';\n                    }\n                    break;\n                case 'image':\n                    newItem.position.height = 'auto';\n                    break;\n                case 'hotspot':\n                    if (add) {\n                        newItem.position.width = '5%';\n                    }\n                    break;\n            }\n\n            items.push(newItem);\n            saveTracking([newItem.id]);\n            renderItems(items, [newItem.id], false);\n        };\n\n        $(document).off('click', '.annotation-timeline-item').on('click', '.annotation-timeline-item', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $videoWrapper.find('.annotation-wrapper').removeClass('active');\n            if (!e.ctrlKey && !e.metaKey) {\n                let elementid = $(this).data('item');\n                let elem = $videoWrapper.find(`.annotation-wrapper[data-item=\"${elementid}\"]`);\n                elem.trigger('click');\n            } else {\n                if ($(this).hasClass('active')) {\n                    $(this).removeClass('active');\n                } else {\n                    $(this).addClass('active');\n                }\n            }\n\n            let activeitems = $(`.annotation-timeline-item.active`);\n            if (activeitems.length == 0) {\n                $('#annotation-canvas #background').addClass('d-none').css('z-index', 0);\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n                $('#annotation-btns #edit').attr('disabled', 'disabled');\n                $('#annotation-btns #edit').removeAttr('disabled');\n            } else {\n                let dataActive = activeitems.map(function() {\n                    return $(this).data('item');\n                }).get();\n\n                dataActive.forEach((id) => {\n                    $videoWrapper.find(`.annotation-wrapper[data-item=${id}]`).addClass('active');\n                });\n\n                let activewrapper = $videoWrapper.find('.annotation-wrapper.active');\n                document.querySelector('.annotation-wrapper.active').focus();\n                $('#edit-btns').attr('data-active', dataActive).addClass('d-flex').removeClass('d-none');\n                if (activewrapper.length > 1) {\n                    $('#annotation-btns #edit').attr('disabled', 'disabled');\n                    $('#annotation-btns #position').addClass('d-none');\n                } else {\n                    $('#annotation-btns #edit').removeAttr('disabled');\n                    $('#annotation-btns #position').removeClass('d-none');\n                }\n\n                $('#annotation-canvas #background').removeClass('d-none').css('z-index', 3);\n            }\n        });\n\n        $(document).off('dblclick', '.annotation-timeline-item').on('dblclick', '.annotation-timeline-item', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            self.player.seek($(this).data('start'));\n            self.dispatchEvent('timeupdate', {time: $(this).data('start')});\n        });\n\n        $playerWrapper.off('click', `#annotation-btns #save`).on('click', `#annotation-btns #save`, function(e) {\n            e.stopImmediatePropagation();\n            getItems(false);\n            // Encode html tags\n            let cleanItems = JSON.stringify(items).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n            let updateId = $videoWrapper.data('id');\n            $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                method: \"POST\",\n                dataType: \"text\",\n                data: {\n                    action: 'quick_edit_field',\n                    sesskey: M.cfg.sesskey,\n                    id: updateId,\n                    field: 'content',\n                    contextid: M.cfg.contextid,\n                    draftitemid: draftitemid,\n                    value: cleanItems,\n                    cmid: self.cmid,\n                    token: self.token,\n                },\n                success: function(data) {\n                    let updated = JSON.parse(data);\n                    draftStatus = null;\n                    tracking = [];\n                    $('#annotation-btns #redo, #annotation-btns #undo').attr('disabled', 'disabled');\n                    self.dispatchEvent('annotationupdated', {\n                        annotation: updated,\n                        action: 'edit',\n                    });\n                }\n            });\n            $('#annotation-canvas #background').trigger('click');\n        });\n\n        $(document).off('click', `#annotation-btns #closetoolbar`).on('click', `#annotation-btns #closetoolbar`, function(e) {\n            e.stopImmediatePropagation();\n            if (draftStatus == 'draft') {\n                Notification.saveCancel(\n                    M.util.get_string('unsavedchange', 'local_ivannotation'),\n                    M.util.get_string('unsavedchangeconfirm', 'local_ivannotation'),\n                    M.util.get_string('save', 'local_ivannotation'),\n                    function() {\n                        // If the user clicks save, save the changes.\n                        $('#annotation-btns #save').trigger('click');\n                        $(`#annotation-btns #closetoolbar`).trigger('click');\n                    },\n                    function() {\n                        // If the user clicks cancel, discard the changes.\n                        let instance = tracking[0];\n                        items = instance.items;\n                        renderItems(items, instance.actives, false);\n                        draftStatus = null;\n                        tracking = [];\n                        $('#annotation-btns #redo, #annotation-btns #undo').attr('disabled', 'disabled');\n                        $(`#annotation-btns #closetoolbar`).trigger('click');\n                    }\n                );\n            } else {\n                $(`#annotation-btns`).remove();\n                $('#interaction-timeline, #video-timeline-wrapper').show();\n                $('#timeline-btns div:not(#playbutton)').css('visibility', 'visible');\n                $('#content-region').removeClass('no-pointer-events');\n                $('#annotation-timeline').hide();\n                $('#scrollbar').addClass('snap');\n                $('#annotation-canvas .annotation-wrapper').addClass('no-pointer').removeClass('active');\n            }\n        });\n\n        $playerWrapper.off('click', `#annotation-btns .add-ia`).on('click', `#annotation-btns .add-ia`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let annoid = $videoWrapper.data('id');\n            let type = $(this).attr('data-mediatype');\n            let start = await self.player.getCurrentTime();\n            let end = start + 5;\n            start = parseFloat(start).toFixed(2);\n            end = parseFloat(end).toFixed(2);\n            let iaform = new ModalForm({\n                formClass: \"local_ivannotation\\\\items\\\\\" + $(this).attr('data-type'),\n                args: {\n                    contextid: M.cfg.contextid,\n                    id: 0,\n                    type: type,\n                    annotationid: annoid,\n                    start: start,\n                    end: end,\n                },\n                modalConfig: {\n                    title: M.util.get_string('addinlineannotation', 'local_ivannotation',\n                        M.util.get_string(type, 'local_ivannotation')),\n                }\n            });\n\n            iaform.show();\n\n            iaform.addEventListener(iaform.events.LOADED, () => {\n                iaform.modal.modal.draggable({\n                    handle: \".modal-header\",\n                });\n                if (type == 'navigation' || type == 'image' || type == 'shape') {\n                    $(document).on('change', '.modal [name=\"timestamp\"]', function(e) {\n                        e.preventDefault();\n                        let parts = $(this).val().split(':');\n                        let timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!self.isBetweenStartAndEnd(timestamp)) {\n                            let message = M.util.get_string('timemustbebetweenstartandendtime', 'local_ivannotation', {\n                                \"start\": self.convertSecondsToHMS(self.start),\n                                \"end\": self.convertSecondsToHMS(self.end),\n                            });\n                            self.addNotification(message);\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n\n                        // Make sure the timestamp is not in the skip segment.\n                        if (self.isInSkipSegment(timestamp)) {\n                            self.addNotification(M.util.get_string('interactionisbetweentheskipsegment',\n                                'local_ivannotation'));\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n                    });\n                }\n            });\n\n            iaform.addEventListener(iaform.events.FORM_SUBMITTED, (e) => {\n                e.stopImmediatePropagation();\n                getItems(false);\n                const highestOrder = getTopLayer(items);\n                let left = Math.random() * 100;\n                let top = Math.random() * 100;\n                let newItem = {\n                    \"id\": new Date().getTime(),\n                    \"type\": type,\n                    \"position\": {\n                        \"width\": \"30%\",\n                        \"left\": left + \"px\",\n                        \"top\": top + \"px\",\n                        \"z-index\": highestOrder + 1,\n                    },\n                    'properties': e.detail,\n                };\n                handleFormData(newItem, type, true);\n            });\n        });\n\n        $playerWrapper.off('click', `#annotation-btns #edit`).on('click', `#annotation-btns #edit`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let annnoid = $videoWrapper.data('id');\n            let active = $('#edit-btns').attr('data-active');\n            getItems(false);\n            let item = items.find(x => x.id == active);\n            let type = item.type;\n            let formdata = JSON.parse(JSON.stringify(item.properties));\n            formdata.contextid = M.cfg.contextid;\n            formdata.id = item.id;\n            formdata.annotationid = annnoid;\n            formdata.type = type;\n            let editform = new ModalForm({\n                formClass: \"local_ivannotation\\\\items\\\\\" +\n                    (type == 'image' || type == 'file' ? 'media' : type),\n                args: formdata,\n                modalConfig: {\n                    title: M.util.get_string('editinlineannotation', 'local_ivannotation',\n                        M.util.get_string(type, 'local_ivannotation')),\n                }\n            });\n\n            editform.show();\n\n            editform.addEventListener(editform.events.LOADED, () => {\n                editform.modal.modal.draggable({\n                    handle: \".modal-header\",\n                });\n            });\n\n            editform.addEventListener(editform.events.FORM_SUBMITTED, (e) => {\n                e.stopImmediatePropagation();\n                getItems(false);\n                item = items.find(x => x.id == active);\n                item.properties = e.detail;\n                // Remove the item from the annotation-canvas\n                $videoWrapper.find(`.annotation-wrapper[data-item=\"${active}\"]`).remove();\n                items = items.filter(x => x.id != active);\n                handleFormData(item, type, false);\n            });\n        });\n\n        $videoWrapper.off('click', `.annotation-wrapper`).on('click', `.annotation-wrapper`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            await self.player.pause();\n            if (!e.ctrlKey && !e.metaKey) {\n                $videoWrapper.find('.annotation-wrapper').removeClass('active');\n                $(this).addClass('active');\n                this.focus();\n                recalculatingSize($(this));\n            } else {\n                if ($(this).hasClass('active')) {\n                    $(this).removeClass('active');\n                } else {\n                    $(this).addClass('active');\n                    this.focus();\n                }\n            }\n\n            if (!isNaN($(this).data('group'))) {\n                let group = $(this).data('group');\n                $videoWrapper.find(`.annotation-wrapper[data-group=\"${group}\"]`).addClass('active');\n            }\n\n            recalculatingSize($(this));\n\n            $(`#timeline #annotation-timeline .annotation-timeline-item`).removeClass('active');\n            let activewrapper = $videoWrapper.find('.annotation-wrapper.active');\n            if (activewrapper.length == 0) {\n                $('#annotation-canvas #background').addClass('d-none').css('z-index', 0);\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n                $('#annotation-btns #edit').attr('disabled', 'disabled');\n                $('#annotation-btns #edit').removeAttr('disabled');\n            } else {\n                let dataActive = activewrapper.map(function() {\n                    return $(this).data('item');\n                }).get();\n\n                dataActive.forEach((id) => {\n                    $(`#timeline #annotation-timeline .annotation-timeline-item[data-item=\"${id}\"]`).addClass('active');\n                });\n\n                $('#edit-btns').attr('data-active', dataActive).addClass('d-flex').removeClass('d-none');\n                if (activewrapper.length > 1) {\n                    $('#annotation-btns #edit').attr('disabled', 'disabled');\n                    $('#edit-btns #position').addClass('d-none');\n                } else {\n                    $('#annotation-btns #edit').removeAttr('disabled');\n                    $('#edit-btns #position').removeClass('d-none');\n                }\n                $('#annotation-canvas #background').removeClass('d-none').css('z-index', 1);\n            }\n\n            // Enable ungroup button if the active items are grouped.\n            let grouping = activewrapper.map(function() {\n                if (isNaN($(this).data('group')) || $(this).data('group') == '') {\n                    return '';\n                }\n                return $(this).data('group');\n            }).get();\n\n            grouping = [...new Set(grouping)];\n            if (activewrapper.length < 2) {\n                $('#annotation-btns #ungroup, #annotation-btns #group').attr('disabled', 'disabled').addClass('d-none');\n            } else {\n                if (grouping.length == 1) {\n                    if (isNaN(grouping[0]) || grouping[0] == '') {\n                        $('#annotation-btns #ungroup').attr('disabled', 'disabled').addClass('d-none');\n                        $('#annotation-btns #group').removeAttr('disabled').removeClass('d-none');\n                    } else {\n                        $('#annotation-btns #ungroup').removeAttr('disabled').removeClass('d-none');\n                        $('#annotation-btns #group').attr('disabled', 'disabled').addClass('d-none');\n                    }\n                } else if (grouping.length > 1) {\n                    $('#annotation-btns #ungroup, #annotation-btns #group').removeAttr('disabled').removeClass('d-none');\n                }\n            }\n\n        });\n\n        $videoWrapper.off('dblclick', '.annotation-wrapper').on('dblclick', '.annotation-wrapper', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).trigger('click');\n            $('#annotation-btns #edit').trigger('click');\n        });\n\n        $(document).off('click', '#annotation-canvas #background').on('click', '#annotation-canvas #background', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $('#annotation-canvas .annotation-wrapper').removeClass('active');\n            $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n            $(`#timeline #annotation-timeline .annotation-timeline-item`).removeClass('active');\n            $('#annotation-canvas #background').addClass('d-none').css('z-index', 0);\n        });\n\n        $(document).off('click', `#annotation-btns #undo`).on('click', `#annotation-btns #undo`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (trackingIndex == 0) {\n                return;\n            }\n            trackingIndex--;\n            const instance = tracking[trackingIndex];\n            items = JSON.parse(instance.items);\n            renderItems(items, instance.actives, false);\n            self.player.seek(instance.timestamp);\n            if (trackingIndex == 0) {\n                $('#annotation-btns #undo').attr('disabled', 'disabled');\n                $('#annotation-btns #redo').removeAttr('disabled');\n            } else {\n                $('#annotation-btns #undo').removeAttr('disabled');\n                if (trackingIndex == tracking.length - 1) {\n                    $('#annotation-btns #redo').attr('disabled', 'disabled');\n                } else {\n                    $('#annotation-btns #redo').removeAttr('disabled');\n                }\n            }\n        });\n\n        $(document).off('click', `#annotation-btns #redo`).on('click', `#annotation-btns #redo`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (trackingIndex == tracking.length - 1) {\n                return;\n            }\n            trackingIndex++;\n            const instance = tracking[trackingIndex];\n            items = JSON.parse(instance.items);\n            renderItems(items, instance.actives, false);\n            self.player.seek(instance.timestamp);\n            if (trackingIndex == tracking.length - 1) {\n                $('#annotation-btns #redo').attr('disabled', 'disabled');\n                $('#annotation-btns #undo').removeAttr('disabled');\n            } else {\n                $('#annotation-btns #redo').removeAttr('disabled');\n                if (trackingIndex == 0) {\n                    $('#annotation-btns #undo').attr('disabled', 'disabled');\n                } else {\n                    $('#annotation-btns #undo').removeAttr('disabled');\n                }\n            }\n        });\n\n        const updateOrder = (active, direction) => {\n            // First sort items by z-index descending\n            getItems(false);\n            items.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            let activeIndex = items.findIndex(x => x.id == active);\n            let activeItem = items[activeIndex];\n            let currentzIndex = activeItem.position['z-index'];\n            let affectedItem = null;\n            let affectedItemIndex = null;\n            if (direction == 'up') {\n                if (activeIndex == 0) {\n                    return;\n                }\n                affectedItemIndex = activeIndex - 1;\n                affectedItem = items[affectedItemIndex];\n                activeItem.position['z-index'] = affectedItem.position['z-index'];\n                affectedItem.position['z-index'] = currentzIndex;\n            } else {\n                if (activeIndex == items.length - 1) {\n                    return;\n                }\n                affectedItemIndex = activeIndex + 1;\n                affectedItem = items[affectedItemIndex];\n                activeItem.position['z-index'] = affectedItem.position['z-index'];\n                affectedItem.position['z-index'] = currentzIndex;\n            }\n            items[activeIndex] = activeItem;\n            items[affectedItemIndex] = affectedItem;\n            $(`.annotation-wrapper[data-item=\"${active}\"]`).css(activeItem.position);\n            $(`.annotation-wrapper[data-item=\"${affectedItem.id}\"]`).css(affectedItem.position);\n            saveTracking([active]);\n        };\n\n        // Group the active items\n        $(document).off('click', `#annotation-btns #group`).on('click', `#annotation-btns #group`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).attr('disabled', 'disabled').addClass('d-none');\n            $('#annotation-btns #ungroup').removeAttr('disabled').removeClass('d-none');\n            getItems(false);\n            let active = $('.annotation-wrapper.active').map(function() {\n                return $(this).data('item');\n            }).get();\n            const group = new Date().getTime();\n            active.forEach((item) => {\n                let activeItem = $(`.annotation-wrapper[data-item=\"${item}\"]`);\n                let targetIndex = items.findIndex(x => x.id == item);\n                let target = JSON.parse(JSON.stringify(items[targetIndex]));\n                target.position.group = group;\n                activeItem.attr('data-group', target.position.group);\n                items[targetIndex] = target;\n            });\n            renderItems(items, active, false);\n            saveTracking(active);\n        });\n\n        $(document).off('click', `#annotation-btns #ungroup`).on('click', `#annotation-btns #ungroup`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).attr('disabled', 'disabled').addClass('d-none');\n            $(`#annotation-btns #group`).removeAttr('disabled').removeClass('d-none');\n            getItems(false);\n            let active = $('.annotation-wrapper.active').map(function() {\n                return $(this).data('item');\n            }).get();\n            active.forEach((item) => {\n                let activeItem = $(`.annotation-wrapper[data-item=\"${item}\"]`);\n                let targetIndex = items.findIndex(x => x.id == item);\n                let target = JSON.parse(JSON.stringify(items[targetIndex]));\n                delete target.position.group;\n                activeItem.attr('data-group', '');\n                items[targetIndex] = target;\n            });\n            renderItems(items, active, false);\n            saveTracking(active);\n        });\n\n        // Increase the z-index of the active items\n        $(document).off('click', `#annotation-btns #up`).on('click', `#annotation-btns #up`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            const topLayer = getTopLayer(items);\n            // Check if the active elements are already in the correct order based on their index positions in the items array\n            if (active.length > 1) {\n                active = sortItemsByLayer(active, 'desc');\n                let indexes = [];\n                items.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n                active.forEach((item) => {\n                    indexes.push(items.findIndex(x => x.id == item));\n                });\n                indexes.sort((a, b) => a - b);\n                if (Math.abs(indexes[0] - indexes[indexes.length - 1]) == active.length - 1) {\n                    if (Number(items[indexes[0]].position['z-index']) == topLayer) {\n                        return;\n                    }\n                }\n            }\n            active.forEach((item) => {\n                updateOrder(item, 'up');\n            });\n            getItems(false);\n            updatePositionInfo($(`.annotation-wrapper[data-item=\"${active[0]}\"]`));\n            renderTimelineItems(items, active);\n        });\n\n        // Decrease the z-index of the active items\n        $(document).off('click', `#annotation-btns #down`).on('click', `#annotation-btns #down`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            const bottomLayer = getBottomLayer(items);\n            // Check if the active elements are already in the correct order based on their index positions in the items array\n            if (active.length > 1) {\n                active = sortItemsByLayer(active, 'asc');\n                let indexes = [];\n                items.sort((a, b) => a.position['z-index'] - b.position['z-index']);\n                active.forEach((item) => {\n                    indexes.push(items.findIndex(x => x.id == item));\n                });\n                indexes.sort((a, b) => a - b);\n                if (Math.abs(indexes[0] - indexes[indexes.length - 1]) == active.length - 1) {\n                    if (Number(items[indexes[0]].position['z-index']) == bottomLayer) {\n                        return;\n                    }\n                }\n            }\n            active.forEach((item) => {\n                updateOrder(item, 'down');\n            });\n            getItems(false);\n            updatePositionInfo($(`.annotation-wrapper[data-item=\"${active[0]}\"]`));\n            renderTimelineItems(items, active);\n        });\n\n        // Delete the active items\n        $playerWrapper.off('click', `#annotation-btns #delete`).on('click', `#annotation-btns #delete`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            active.forEach((item) => {\n                let activeItem = $(`.annotation-wrapper[data-item=\"${item}\"]`);\n                activeItem.remove();\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n            });\n            getItems(false);\n            renderTimelineItems(items, null);\n            saveTracking(null);\n        });\n\n        // Duplicate the active items.\n        $playerWrapper.off('click', `#annotation-btns #copy`).on('click', `#annotation-btns #copy`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            getItems(false);\n            // Copy the active item.\n            const highestOrder = getTopLayer(items);\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            active = sortItemsByLayer(active, 'asc');\n            const currentTime = await self.player.getCurrentTime();\n            let newItems = [];\n            let groupIncrement = Math.round(Math.random() * 100);\n            for (let i = 0; i < active.length; i++) {\n                let a = active[i];\n                let activeItem = $(`.annotation-wrapper[data-item=\"${a}\"]`);\n                activeItem.removeClass('active');\n                const item = items.find(x => x.id == a);\n                let newItem = JSON.parse(JSON.stringify(item));\n                newItem.properties.end = currentTime + (newItem.properties.end - newItem.properties.start);\n                newItem.properties.start = currentTime;\n                newItem.position = recalculatingSize(activeItem);\n                if (item.position.group) {\n                    newItem.position.group = Number(item.position.group) + groupIncrement;\n                }\n                newItem.id = new Date().getTime() + i;\n                newItems.push(newItem.id);\n                newItem.position['z-index'] = Number(highestOrder) + i + 1;\n                items.push(newItem);\n                renderItems(items, null, false);\n                if (i == active.length - 1) {\n                    $('#edit-btns').attr('data-active', newItems.join(',')).addClass('d-flex').removeClass('d-none');\n                    // Put focus on the first element\n                    renderItems([], newItems, true);\n                    setTimeout(() => {\n                        getItems(false);\n                        document.querySelector('.annotation-wrapper.active').focus();\n                        updatePositionInfo($videoWrapper.find(`.annotation-wrapper[data-item=\"${newItem.id}\"]`));\n                        self.dispatchEvent('timeupdate', {time: currentTime});\n                        saveTracking(newItems);\n                    }, 500);\n                }\n            }\n        });\n\n        // Move items with keyboard arrow keys, ctrl + up to layer up, and ctrl + down to layer down.\n        $playerWrapper.on('keydown', '.annotation-wrapper', function(e) {\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            getItems(false);\n            for (let i = 0; i < active.length; i++) {\n                let a = active[i];\n                let activeItem = $(`.annotation-wrapper[data-item=\"${a}\"]`);\n                if (activeItem != undefined) {\n                    let position = activeItem.position();\n                    let ctrl = e.ctrlKey || e.metaKey;\n                    let step = 1;\n                    // Prevent page scroll\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    switch (e.key) {\n                        case 'ArrowUp':\n                            if (position.top > 0) {\n                                position.top = position.top - step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowDown':\n                            if (position.top + activeItem.outerHeight() < $videoWrapper.height()) {\n                                position.top = position.top + step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowLeft':\n                            if (position.left > 0) {\n                                position.left = position.left - step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowRight':\n                            if (position.left + activeItem.outerWidth() < $videoWrapper.width()) {\n                                position.left = position.left + step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'Delete':\n                            $(`#annotation-btns #delete`).trigger('click');\n                            return;\n                        case 'd': // Ctrl + d to duplicate\n                            if (ctrl) {\n                                $(`#annotation-btns #copy`).trigger('click');\n                            }\n                            return;\n                        default:\n                            return;\n                    }\n                    activeItem.css(position);\n                    recalculatingSize(activeItem);\n                }\n            }\n        });\n\n        // Listen to the annotationupdated event\n        $(document).on('annotationdeleted', function(e) {\n            let deleted = e.originalEvent.detail.annotation;\n            let annoid = $videoWrapper.data('id');\n            if (annoid == deleted.id) {\n                $videoWrapper.find('.annotation-wrapper').remove();\n                $(`#annotation-btns`).remove();\n                $(`#timeline #annotation-timeline .annotation-timeline-item`).remove();\n            }\n        });\n\n        // Confirm draft saved.\n        window.addEventListener('beforeunload', (e) => {\n            if (draftStatus !== null) {\n                const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                e.returnValue = confirmationMessage;\n                return confirmationMessage;\n            }\n            return true;\n        });\n\n        self.timepicker();\n    }\n\n    /**\n     * Override the render method to add the items on the list of editing annotations\n     * @param {Array} annotations The annotations array\n     * @param {Object} listItem The list item\n     * @param {Object} item The annotation object\n     * @returns {void}\n     */\n    async renderEditItem(annotations, listItem, item) {\n        this.annotations = annotations;\n        listItem.removeAttr('id').removeClass('d-none');\n        listItem.attr('data-type', item.type);\n        listItem.addClass(item.type);\n        listItem.attr('data-id', item.id);\n        listItem.removeAttr('data-timestamp');\n        listItem.find('.timestamp').remove();\n        listItem.find('.title').text(M.util.get_string('pluginname', 'local_ivannotation')).addClass('no-pointer text-dark');\n        listItem.find('.btn.xp').remove();\n        listItem.find('.type-icon i').addClass(this.prop.icon);\n        listItem.find('.type-icon').attr('title', this.prop.title);\n        listItem.find('.btn.copy').remove();\n        listItem.appendTo('#annotation-list');\n        return listItem;\n    }\n\n    /**\n     * Edit an annotation\n     * @param {Array} annotations The annotations array\n     * @param {number} id The annotation id\n     * @returns {void}\n     */\n    async editAnnotation(annotations, id) {\n        this.annotations = annotations;\n        let item = this.annotations.find((annotation) => annotation.id == id);\n        $('#annotation-canvas').attr('data-id', item.id);\n        $('#interaction-timeline, #video-timeline-wrapper').hide();\n        $('#timeline-btns div:not(#playbutton)').css('visibility', 'hidden');\n        $('#content-region').addClass('no-pointer-events');\n        $('#annotation-timeline').show();\n        $('#annotation-canvas .annotation-wrapper').removeClass('no-pointer');\n        $('#scrollbar').removeClass('snap');\n        this.renderAnnotationToolbar(item);\n    }\n\n    /**\n     * Add an annotation to the annotation list without the form as other annotation\n     * @param {Array} annotations Array of annotations\n     * @param {Number} timestamp timestamp\n     * @param {Number} coursemodule Course module id\n     * @returns void\n     */\n    async addAnnotation(annotations, timestamp, coursemodule) {\n        let self = this;\n        let data = {\n            title: self.prop.title,\n            timestamp: -1,\n            contextid: M.cfg.contextid,\n            type: self.prop.name,\n            courseid: self.course,\n            cmid: coursemodule,\n            annotationid: self.interaction,\n            hascompletion: 0,\n            advanced: JSON.stringify({\n                \"visiblebeforecompleted\": \"1\",\n                \"visibleaftercompleted\": null,\n                \"clickablebeforecompleted\": \"1\",\n                \"clickableaftercompleted\": null,\n                \"replaybehavior\": \"1\",\n            }),\n        };\n        let ajax = await Ajax.call([{\n            methodname: 'local_ivannotation_add',\n            args: {\n                annotationdata: JSON.stringify(data),\n            },\n            contextid: M.cfg.contextid,\n        }])[0];\n\n        let newAnnotation = JSON.parse(ajax.data);\n        self.dispatchEvent('annotationupdated', {\n            annotation: newAnnotation,\n            action: 'add'\n        });\n\n        self.annotations = annotations;\n        $('#contentmodal').modal('hide');\n        newAnnotation.editmode = true;\n        const content = await self.render(newAnnotation, 'json');\n        $('#annotation-canvas').attr('data-id', newAnnotation.id);\n        self.postContentRender(newAnnotation, content);\n        self.editAnnotation(annotations, newAnnotation.id);\n    }\n\n    /**\n     * What happens when an item runs\n     * @param {Object} annotation The annotation object\n     * @returns {Object} The annotation object\n     */\n    runInteraction(annotation) {\n        return annotation;\n    }\n}"],"names":["Annotation","Base","roundToTwo","num","Math","round","videoWrapper","item","this","annotations","find","annotation","type","isEditMode","document","on","e","t","originalEvent","detail","time","each","start","Number","data","end","css","attr","id","editmode","content","render","postContentRender","updateAspectRatio","async","video","reset","elem","hasClass","ratio","displayoptions","usefixedratio","player","aspectratio","videowrapperaspect","width","height","videowrapperwidth","videowrapperheight","vwrapper","querySelector","ResizeObserver","observe","remove","annotationitems","M","util","get_string","dataForTemplate","items","html","Templates","append","enableColorPicker","self","$videoWrapper","$playerWrapper","draftStatus","convertSecondsToMMSS","seconds","rounded","hours","floor","minutes","sec","formattedTime","updatePositionInfo","w","outerWidth","hw","outerHeight","position","top","l","left","z","s","text","recalculatingSize","message","h","g","group","recalculatingTextSize","button","multiline","fontSize","padding","rowCount","length","style","renderTimelineItems","elements","activeids","currentTime","getCurrentTime","map","parseInt","timeline","empty","sort","a","b","count","forEach","i","prop","properties","includes","draggable","trigger","$selected","addClass","timestampScrollbar","ui","timestamp","totaltime","duration","now","$annowrapper","distance","originalPosition","not","$this","setTimeout","removeClass","elementid","itemIndex","findIndex","x","get","saveTracking","renderItems","resizable","originalSize","size","newStart","newEnd","leftPercentage","newWidth","dispatchEvent","$scrollbar","clone","actives","update","active","filter","wrapper","replace","parts","split","gotourl","url","shadow","formattedalttext","renderImage","wrapperhtml","formattedlabel","renderFile","renderNavigation","undefined","bold","italic","underline","textcolor","bgcolor","borderwidth","bordercolor","textfont","renderText","textparts","textblock","part","trim","alignment","lineHeight","renderTextBlock","opacity","shape","renderShape","formattedtitle","color","usemodal","isBS5","popover","container","template","$body","formatContent","contextid","openbydefault","renderHotspot","aspectRatio","is","containment","cursor","grid","handle","getItems","drag","event","positions","bottom","right","target","stop","newLeft","newTop","handles","minHeight","minWidth","resize","ctrlKey","off","stopImmediatePropagation","pause","hotspotid","hotspot","title","modal","fadeIn","seek","play","closest","existingwrapper","tracking","trackingIndex","JSON","parse","push","stringify","draftitemid","slice","at","Date","getTime","removeAttr","sortItemsByLayer","ids","order","toString","targetItems","getTopLayer","itms","sorted","zindex","updateid","newItems","index","element","handleFormData","newItem","add","preventDefault","metaKey","activeitems","dataActive","activewrapper","focus","cleanItems","updateId","ajax","cfg","wwwroot","method","dataType","action","sesskey","field","value","cmid","token","success","updated","saveCancel","instance","show","hide","annoid","parseFloat","toFixed","iaform","ModalForm","formClass","args","annotationid","modalConfig","addEventListener","events","LOADED","val","isBetweenStartAndEnd","convertSecondsToHMS","addNotification","isInSkipSegment","FORM_SUBMITTED","highestOrder","random","annnoid","formdata","editform","isNaN","grouping","Set","updateOrder","direction","activeIndex","activeItem","currentzIndex","affectedItem","affectedItemIndex","targetIndex","topLayer","indexes","abs","bottomLayer","getBottomLayer","groupIncrement","join","ctrl","step","key","deleted","window","confirmationMessage","returnValue","timepicker","listItem","icon","appendTo","renderAnnotationToolbar","coursemodule","name","courseid","course","interaction","hascompletion","advanced","Ajax","call","methodname","annotationdata","newAnnotation","editAnnotation","runInteraction"],"mappings":"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"}